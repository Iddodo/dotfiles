# Toggle yabai
lctrl + lalt - y: "${HOME}"/.config/yabai/scripts/toggle_yabai.sh


# Show system statistics
fn + lalt - 1 : "${HOME}"/.config/yabai/scripts/show_cpu.sh
fn + lalt - 2 : "${HOME}"/.config/yabai/scripts/show_mem.sh
fn + lalt - 3 : "${HOME}"/.config/yabai/scripts/show_bat.sh
fn + lalt - 4 : "${HOME}"/.config/yabai/scripts/show_disk.sh
fn + lalt - 5 : "${HOME}"/.config/yabai/scripts/show_song.sh

# Navigation
alt - h : yabai -m window --focus west
alt - j : yabai -m window --focus south
alt - k : yabai -m window --focus north
alt - l : yabai -m window --focus east

# Moving windows
shift + alt - h : yabai -m window --warp west
shift + alt - j : yabai -m window --warp south
shift + alt - k : yabai -m window --warp north
shift + alt - l : yabai -m window --warp east

# Move focus container to workspace
shift + alt - 0x1E : yabai -m window --space last; yabai -m space --focus last
shift + alt - 0x21 : yabai -m window --space first; yabai -m space --focus first

shift + alt - p : yabai -m window --space prev || yabai -m window --space last; \
    yabai -m space --focus prev || yabai -m space --focus last

shift + alt - n : yabai -m window --space next || yabai -m window --space first; \
    yabai -m space --focus next || yabai -m space --focus first

# Resize windows
lctrl + alt - h : yabai -m window --resize left:-50:0; \
                  yabai -m window --resize right:-50:0
lctrl + alt - j : yabai -m window --resize bottom:0:50; \
                  yabai -m window --resize top:0:50
lctrl + alt - k : yabai -m window --resize top:0:-50; \
                  yabai -m window --resize bottom:0:-50
lctrl + alt - l : yabai -m window --resize right:50:0; \
                  yabai -m window --resize left:50:0

# Equalize size of windows
lctrl + alt - e : yabai -m space --balance

# Enable / Disable gaps in current workspace
lctrl + alt - g : yabai -m space --toggle padding; yabai -m space --toggle gap

# Rotate windows clockwise and anticlockwise
alt - r         : yabai -m space --rotate 270
shift + alt - r : yabai -m space --rotate 90


# Change layout of desktop
rcmd + ralt - b: yabai -m space --layout bsp
rcmd + ralt - f: yabai -m space --layout float

# Rotate on X and Y Axis
shift + alt - x : yabai -m space --mirror x-axis
shift + alt - y : yabai -m space --mirror y-axis

# Set insertion point for focused container
shift + lctrl + alt - h : yabai -m window --insert west
shift + lctrl + alt - j : yabai -m window --insert south
shift + lctrl + alt - k : yabai -m window --insert north
shift + lctrl + alt - l : yabai -m window --insert east


# Focus first space
lctrl + alt - 0x21: yabai -m space --focus first
lctrl + alt - 0x1E: yabai -m space --focus last

# Focus previous space by mission-control index if one exists, otherwise focus the last space
lctrl + alt - p: yabai -m space --focus prev || yabai -m space --focus last

# Focus next space by mission-control index if one exists, otherwise focus the first space
lctrl + alt - n: yabai -m space --focus next || yabai -m space --focus first

# Jump to most recent
lctrl + alt - o: yabai -m space --focus recent

# Create space on the active display
lctrl + alt - t: index="$(yabai -m query --spaces --space | jq .index)"; \
    yabai -m space --create; \
    yabai -m space --focus last; \
    echo "refresh" | nc -U /tmp/yabai-indicator.socket
    

lctrl + alt - x: index="$(yabai -m query --spaces --space last | jq .index)"; \
    yabai -m space --destroy; \
    yabai -m space --focus "$index" || yabai -m space --focus "$(($index - 1))"; \
    echo "refresh" | nc -U /tmp/yabai-indicator.socket


# Move space left
lctrl + shift + alt - 0x2B: yabai -m space --move prev; \
    echo "refresh" | nc -U /tmp/yabai-indicator.socket

# Move space right
lctrl + shift + alt - 0x2F: yabai -m space --move next; \
    echo "refresh" | nc -U /tmp/yabai-indicator.socket

# Float / Unfloat window
shift + alt - space : \
    yabai -m window --toggle float; \
    yabai -m window --toggle border

# Restart Yabai
shift + lctrl + alt - r : \
    /usr/bin/env osascript <<< \
        "display notification \"Restarting Yabai\" with title \"Yabai\""; \
    launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"

# Make window native fullscreen
alt - f         : yabai -m window --toggle zoom-fullscreen
shift + alt - f : yabai -m window --toggle native-fullscreen



rcmd + ralt - 1: yabai -m space --focus 1 
rcmd + ralt - 2: yabai -m space --focus 2 
rcmd + ralt - 3: yabai -m space --focus 3
rcmd + ralt - 4: yabai -m space --focus 4
rcmd + ralt - 5: yabai -m space --focus 5
rcmd + ralt - 6: yabai -m space --focus 6
rcmd + ralt - 7: yabai -m space --focus 7
rcmd + ralt - 8: yabai -m space --focus 8
rcmd + ralt - 9: yabai -m space --focus 9


shift + rcmd - 1 : yabai -m window --space 1; yabai -m space --focus 1
shift + rcmd - 2 : yabai -m window --space 2; yabai -m space --focus 2
shift + rcmd - 3 : yabai -m window --space 3; yabai -m space --focus 3
shift + rcmd - 4 : yabai -m window --space 4; yabai -m space --focus 4
shift + rcmd - 5 : yabai -m window --space 5; yabai -m space --focus 5
shift + rcmd - 6 : yabai -m window --space 6; yabai -m space --focus 6
shift + rcmd - 7 : yabai -m window --space 7; yabai -m space --focus 7
shift + rcmd - 8 : yabai -m window --space 8; yabai -m space --focus 8
shift + rcmd - 9 : yabai -m window --space 9; yabai -m space --focus 9

lctrl + alt - p: yabai -m space --focus prev
lctrl + alt - n: yabai -m space --focus next

# create desktop and follow focus
# Note: script fails when workspace is empty due to Yabai not reporting the workspace (bug?)
#       best to use the create + move window command instead of creating a blank window
shift + rcmd - t : yabai -m space --create;\
                 index="$(yabai -m query --spaces --space last | jq .index)"; \
                 yabai -m window --space "${index}";\
                 yabai -m space --focus "${index}"; \
        echo "refresh" | nc -U /tmp/yabai-indicator.socket


cmd - return: /Applications/kitty.app/Contents/MacOS/kitty --single-instance -d ~
shift + cmd - return: /opt/homebrew/opt/emacs-plus@28/bin/emacsclient -c -e " (select-frame-set-input-focus (selected-frame))"
alt + cmd - n: open -n /Applications/Firefox.app
#shift + alt + cmd - n: /Applications/Firefox.app/Contents/MacOS/firefox-bin -P "Stranger"
