#!/usr/bin/env sh

# for this to work you must configure sudo such that
# it will be able to run the command without password

yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

# .. more yabai startup stuff

# Fix Emacs tiling
yabai -m rule --add app=Emacs manage=on
yabai -m rule --add app=EmacsClient manage=on
yabai -m rule --add app=emacsclient manage=on

# Autofocus mouse
yabai -m config focus_follows_mouse autofocus

# bar settings
#yabai -m config status_bar                   off
#yabai -m config status_bar_text_font         "Helvetica Neue:Bold:12.0"
#yabai -m config status_bar_icon_font         "FontAwesome:Regular:12.0"
#yabai -m config status_bar_background_color  0xff202020
#yabai -m config status_bar_foreground_color  0xffa8a8a8
#yabai -m config status_bar_space_icon_strip  I II III IV V VI VII VIII IX X
#yabai -m config status_bar_power_icon_strip   
#yabai -m config status_bar_space_icon        
#yabai -m config status_bar_clock_icon        

# global settings
yabai -m config window_placement             second_child
yabai -m config window_opacity               off
yabai -m config window_opacity_duration      0.0
yabai -m config window_shadow              on
yabai -m config window_border                off
#yabai -m config window_border_placement      inset
yabai -m config window_border_width          4
#yabai -m config window_border_radius         -1.0
#yabai -m config active_window_border_topmost off
#yabai -m config active_window_border_color   0xff775759
#yabai -m config normal_window_border_color   0xff505050
#yabai -m config insert_window_border_color   0xffd75f5f
#yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
yabai -m config window_topmost               off
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        1.0
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 off
yabai -m config focus_follows_mouse          off
# make ^ this autofocus is you want that type of behavio
yabai -m config mouse_follows_focus          off
yabai -m config mouse_modifier               ctrl
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize
yabai -m config window_topmost               off

# general space settings
yabai -m config layout                       bsp
#yabai -m config top_padding                  30
yabai -m config top_padding                  0
yabai -m config bottom_padding               10
yabai -m config left_padding                 15
yabai -m config right_padding                10
yabai -m config window_gap                   10


# ===== RULES ======
#yabai -m rule --add label="WhatsApp" app="^WhatsApp$" manage=off
#yabai -m rule --add label="Microsoft Word" app="^Microsoft Word$" manage=off
yabai -m rule --add label="Inkscape" app="^Inkscape$" manage=off
yabai -m rule --add label="Finder" app="^Finder$" title="(Co(py|nnect)|Move|Info|Pref)" manage=off
yabai -m rule --add label="Safari" app="^Safari$" title="^(General|(Tab|Password|Website|Extension)s|AutoFill|Se(arch|curity)|Privacy|Advance)$" manage=off
yabai -m rule --add label="macfeh" app="^macfeh$" manage=off
yabai -m rule --add label="System Preferences" app="^System Preferences$" title=".*" manage=off
yabai -m rule --add label="App Store" app="^App Store$" manage=off
yabai -m rule --add label="Activity Monitor" app="^Activity Monitor$" manage=off
yabai -m rule --add label="KeePassXC" app="^KeePassXC$" manage=off
yabai -m rule --add label="Calculator" app="^Calculator$" manage=off
yabai -m rule --add label="Dictionary" app="^Dictionary$" manage=off
yabai -m rule --add label="mpv" app="^mpv$" manage=off
yabai -m rule --add label="Software Update" title="Software Update" manage=off
yabai -m rule --add label="About This Mac" app="System Information" title="About This Mac" manage=off
yabai -m rule --add label="Firefox" app="Firefox" title="Technion Plus" manage=off


yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus recent || yabai -m window --focus first"
yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus recent || yabai -m window --focus first"
